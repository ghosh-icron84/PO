library(shiny)
fluidPage(
  
  titlePanel(h3("Finding key words")),
  
  sidebarLayout(
    
    sidebarPanel(
      selectInput("selection", "Choose file:",
                  choices = files),
      actionButton("update", "Submit")
                ),
    mainPanel(
      tabsetPanel(id="tab1",
                  tabPanel(tags$b("Output"), textOutput("data"))
      )
    )
  )
)
    





library(shiny)

function(input, output, session) {
  terms <- reactive({
  input$update
    isolate({
      withProgress({
        setProgress(message = "Processing corpus...")
        getTerm(input$selection)
      })
    })
  })


output$data <- renderText({
  v <- terms()
  names(v)
  })
 
}




library(tm)
library(memoise)

 files <<- list("Text" = "t")
                
 
 getTerm <- memoise(function(file) {
   
   if (!(file %in% files))
     stop("Unknown file")
   
   text <- readLines(sprintf("C:/Users/debapriyag@icrakpo.com/Desktop/Textfiles/Text.txt", file),
                     encoding="UTF-8")

  
  myCorpus = Corpus(VectorSource(text))
  myCorpus = tm_map(myCorpus, content_transformer(tolower))
  myCorpus = tm_map(myCorpus, removePunctuation)
  myCorpus = tm_map(myCorpus, removeNumbers)
 myCorpus = tm_map(myCorpus, removeWords,
                    c(stopwords("SMART"), "thy", "thou", "thee", "the", "and", "but"))
 
  myDTM = TermDocumentMatrix(myCorpus,
                            control = list(minWordLength = 1))
 
 m = as.matrix(myDTM)
 
 sort(rowSums(m), decreasing = TRUE)
  
})
